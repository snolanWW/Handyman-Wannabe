@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html {
    font-family: 'Montserrat', sans-serif;
  }

  html, body {
    overflow-x: hidden;
    max-width: 100%;
  }

  h1 {
    @apply text-4xl font-bold md:text-5xl;
  }

  h2 {
    @apply text-3xl font-bold md:text-4xl;
  }

  h3 {
    @apply text-2xl font-bold md:text-3xl;
  }
}

@layer components {
  .btn-primary {
    @apply bg-primary text-white font-bold py-3 px-6 rounded-lg hover:bg-primary/90 transition-colors;
  }

  .btn-secondary {
    @apply bg-secondary text-white font-bold py-3 px-6 rounded-lg hover:bg-secondary/90 transition-colors;
  }

  .nav-link {
    @apply text-gray-700 hover:text-primary transition-colors;
  }

  /* Navigation Dropdown Animations */
  .dropdown-enter {
    opacity: 0;
    transform: translateY(-10px);
  }

  .dropdown-enter-active {
    opacity: 1;
    transform: translateY(0);
    transition: opacity 200ms, transform 200ms;
  }

  .dropdown-exit {
    opacity: 1;
    transform: translateY(0);
  }

  .dropdown-exit-active {
    opacity: 0;
    transform: translateY(-10px);
    transition: opacity 200ms, transform 200ms;
  }

  /* Pulsating Button Animation */
  @keyframes pulse-glow {
    0% {
      transform: scale(1);
      box-shadow: 0 0 0 0 rgba(145, 211, 15, 0.7);
    }

    70% {
      transform: scale(1.05);
      box-shadow: 0 0 0 15px rgba(145, 211, 15, 0);
    }

    100% {
      transform: scale(1);
      box-shadow: 0 0 0 0 rgba(145, 211, 15, 0);
    }
  }

  .btn-ai-call {
    @apply bg-primary text-white font-bold text-xl py-4 px-8 rounded-lg shadow-md;
    animation: pulse-glow 1.5s infinite ease-in-out;
  }

  .btn-ai-call:hover {
    @apply bg-primary/90;
    animation-play-state: paused;
  }

  /* Reduce motion if user prefers */
  @media (prefers-reduced-motion: reduce) {
    .btn-ai-call {
      animation: none;
    }
  }
}

/* Search dropdown styles */
.search-dropdown {
  z-index: 9999;
  animation: fadeIn 0.2s ease-in-out;
  max-height: 220px; /* Increased height for better visibility */
  overflow-y: auto;
  position: absolute;
  width: 85%; /* Narrower dropdown */
  left: 7.5%; /* Center the narrower dropdown */
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  border-radius: 0.4rem;
  top: 100%;
}

.search-dropdown li {
  padding: 0.35rem 0.6rem; /* Reduced padding for more compact items */
  font-size: 0.85rem; /* Smaller text */
  line-height: 1.2;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Service modal styles */
.service-modal-overlay {
  animation: modalFadeIn 0.3s ease-in-out;
}

.service-modal {
  animation: modalSlideIn 0.3s ease-in-out;
}

@keyframes modalFadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes modalSlideIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Mobile menu animations */
.mobile-menu-enter {
  opacity: 0;
  transform: translateY(-10px);
}

.mobile-menu-enter-active {
  opacity: 1;
  transform: translateY(0);
  transition: opacity 200ms, transform 200ms;
}

.mobile-menu-exit {
  opacity: 1;
  transform: translateY(0);
}

.mobile-menu-exit-active {
  opacity: 0;
  transform: translateY(-10px);
  transition: opacity 200ms, transform 200ms;
}

/* Prevent body scroll when mobile menu is open */
body.menu-open {
  overflow: hidden;
}

/* Mobile menu styles */
@media (max-width: 767px) {
  .navbar-mobile-menu {
    max-height: calc(100vh - 64px);
    overflow-y: auto;
    overscroll-behavior: contain;
  }

  /* Larger tap targets for mobile */
  .navbar-mobile-menu a,
  .navbar-mobile-menu button {
    min-height: 44px;
    display: flex;
    align-items: center;
  }

  /* Improved spacing for mobile menu items */
  .navbar-mobile-submenu {
    max-height: 250px;
    overflow-y: auto;
    scrollbar-width: thin;
    scrollbar-color: rgba(0,0,0,0.2) transparent;
  }

  .navbar-mobile-submenu::-webkit-scrollbar {
    width: 4px;
  }

  .navbar-mobile-submenu::-webkit-scrollbar-thumb {
    background-color: rgba(0,0,0,0.2);
    border-radius: 4px;
  }
}

/* Custom Scrollbar for Search Dropdown */
.search-dropdown {
  max-height: 300px;
  overflow-y: auto;
  scrollbar-width: thin;
  scrollbar-color: #dfdfdf transparent;
}

/* Mobile Services Page */
.mobile-services-page {
  display: none;
  padding: 1rem; /* Added padding for better spacing */
}

@media (max-width: 768px) {
  .mobile-services-page {
    display: block;
  }
}

.mobile-services-page {
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
}

.mobile-services-page li button {
  touch-action: manipulation;
  min-height: 48px;
  width: 100%; /* Make buttons fill the width */
  box-sizing: border-box; /* Include padding and border in the width */
  text-align: left; /* Align text to the left */
  padding: 0.5rem 1rem; /* Add padding for better spacing */
  border: none;
  background-color: transparent;
}


/* Sample Navbar and MobileServicesPage components (replace with your actual components) */

/* Assuming you have a Navbar component that conditionally renders */
/* based on screen size (e.g. using a state variable). */

/* This is a placeholder - replace with your actual service categories */
const serviceCategories = ["Category 1", "Category 2", "Category 3", "Category 4", "Category 5"];


function MobileServicesPage() {
  return (
    <ul className="mobile-services-page">
      {serviceCategories.map((category, index) => (
        <li key={index}>
          <button>{category}</button>
        </li>
      ))}
    </ul>
  );
}

// Example Navbar modification (replace with your actual Navbar)
function Navbar() {
  const isMobile = window.innerWidth <= 768; // Adjust breakpoint as needed
  return (
    <nav>
      {/* Rest of your Navbar content */}
      {isMobile && <MobileServicesPage />}
    </nav>
  );
}